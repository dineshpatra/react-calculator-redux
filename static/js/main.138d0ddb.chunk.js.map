{"version":3,"sources":["utility/SymbolConvertion.ts","utility/CalculatorActions.ts","components/Result/Result.tsx","components/dialpad/Button.tsx","actions/CalculatorActions.ts","components/dialpad/DialPad.tsx","components/CalculatorApp/CalculatorApp.tsx","reducers/CalculateReducer.ts","reducers/RootReducer.tsx","index.tsx"],"names":["Symbols","PLUS","unicode","MINUS","DIVISION","MULTIPLICATION","SQUARE","EQUAL","RESET","BACK","PERCENTAGE","convertMathTOJS","str","replace","RegExp","eval","e","CalculatorActions","prop","calculator","useSelector","state","id","typedKeys","join","result","NumBtn","props","dispatch","useDispatch","className","onClick","number","actualSymbol","symbol","type","KEY_INPUT","key","ActionBtn","action","DialPad","dialButtons","React","Component","CalculatorApp","Result","intialState","showResult","RootReducer","combineReducers","slice","length","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.138d0ddb.chunk.js","sourcesContent":["import {Immutable} from './Types';\r\n\r\nexport const Symbols:Immutable<{[key:string]: {unicode:string}}> = {\r\n    PLUS : {\r\n        unicode   : \"\\u002B\"\r\n    },\r\n    MINUS : {\r\n        unicode : \"\\u2212\"\r\n    },\r\n    DIVISION : {\r\n        unicode : \"\\u00F7\"\r\n    },\r\n    MULTIPLICATION : {\r\n        unicode  : \"\\u00D7\"\r\n    },\r\n    SQUARE : {\r\n        unicode  : \"\\u00B2\"\r\n    },\r\n    EQUAL : {\r\n        unicode : \"=\"\r\n    },\r\n    RESET : {\r\n        unicode : \"CE\"\r\n    },\r\n    BACK : {\r\n        unicode : \"\\u21BA\"\r\n    },\r\n    PERCENTAGE : {\r\n        unicode : \"%\"\r\n    }\r\n};\r\n\r\n\r\nexport const convertMathTOJS = (str:string):string|number => {\r\n    str = str.replace(new RegExp(Symbols.MINUS.unicode,         \"g\"), \"-\")\r\n             .replace(new RegExp(Symbols.DIVISION.unicode,      \"g\"), \"/\")\r\n             .replace(new RegExp(Symbols.MULTIPLICATION.unicode, \"g\"), \"*\")\r\n             .replace(new RegExp(Symbols.PERCENTAGE.unicode,     \"g\"), \"/100*\")\r\n             .replace(new RegExp(\"(\\\\d+(\\\\.\\\\d+)?)\" + Symbols.SQUARE.unicode, \"g\"), \"Math.pow($1, 2)\");\r\n    try {\r\n        return eval(str);\r\n    } catch(e) {\r\n        return \"Syntax error\";\r\n    }\r\n}","export enum CalculatorActions {\r\n    KEY_INPUT = \"KEY_INPUT\",\r\n    RESET     = \"RESET\",\r\n    BACK      = \"BACK\",\r\n    EQUAL     = \"EQUAL\"\r\n}","import '../../assets/sass/result.scss';\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootState } from '../../reducers/RootReducer';\r\n\r\nexport default (prop: any) => {\r\n    const calculator = useSelector((state:RootState) => {\r\n        return state.calculator;\r\n    });\r\n    return (\r\n        <section id=\"result-box\">\r\n            <div id=\"inputs\">\r\n                {calculator.typedKeys.join(\"\")}\r\n            </div>\r\n            <div id=\"result\">\r\n                {calculator.result}\r\n            </div>\r\n        </section>\r\n    );\r\n}","import {keyInput, actionInput} from '../../actions/CalculatorActions';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nexport function NumBtn(props: {symbol: string, actualSymbol?:string}) {\r\n    const dispatch = useDispatch();\r\n    return (\r\n        <div className=\"btn-container\" onClick={() => { dispatch(keyInput(props.actualSymbol ? props.actualSymbol : props.symbol))} }>{ props.symbol }</div>\r\n    );\r\n}\r\n\r\nexport const ActionBtn = (props: {action: any, symbol: string}) => {\r\n    const dispatch = useDispatch();\r\n    return (\r\n        <div className=\"btn-container\"  onClick={() => { dispatch(actionInput(props.action, props.symbol)) }}>{ props.symbol }</div>\r\n    );\r\n}\r\n","import {CalculatorActions} from '../utility/CalculatorActions';\r\n\r\nexport const keyInput = (number: string) => {\r\n    return {type: CalculatorActions.KEY_INPUT, key: number};\r\n}\r\n\r\nexport const actionInput = (action:CalculatorActions, number: string) => {\r\n    return {type: action };\r\n}","import React from 'react';\r\nimport {NumBtn, ActionBtn} from './Button';\r\nimport {CalculatorActions} from '../../utility/CalculatorActions';\r\nimport { Symbols } from '../../utility/SymbolConvertion';\r\n\r\nexport default class DialPad extends React.Component {\r\n    \r\n    dialButtons: Array<any> = [];\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"dialpad-container\">\r\n                <div className=\"row\">\r\n                    <ActionBtn action={CalculatorActions.RESET} symbol={Symbols.RESET.unicode} />\r\n                    <NumBtn symbol=\"%\" />\r\n                    <NumBtn symbol={\"x\" + Symbols.SQUARE.unicode} actualSymbol={Symbols.SQUARE.unicode}/>\r\n                    <ActionBtn action={CalculatorActions.BACK} symbol={Symbols.BACK.unicode}/>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <NumBtn symbol=\"9\"/>\r\n                    <NumBtn symbol=\"8\"/>\r\n                    <NumBtn symbol=\"7\"/>\r\n                    <NumBtn symbol={Symbols.DIVISION.unicode}/>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <NumBtn symbol=\"6\"/>\r\n                    <NumBtn symbol=\"5\"/>\r\n                    <NumBtn symbol=\"4\"/>\r\n                    <NumBtn symbol={Symbols.MULTIPLICATION.unicode}/>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <NumBtn symbol=\"3\"/>\r\n                    <NumBtn symbol=\"2\"/>\r\n                    <NumBtn symbol=\"1\"/>\r\n                    <NumBtn symbol={Symbols.MINUS.unicode}/>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <NumBtn symbol=\"0\"/>\r\n                    <NumBtn symbol=\".\"/>\r\n                    <NumBtn symbol=\"+\"/>\r\n                    <ActionBtn action={CalculatorActions.EQUAL} symbol={Symbols.EQUAL.unicode}/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport '../../assets/sass/calculator.scss';\r\nimport Result from '../Result/Result';\r\nimport DialPad from '../dialpad/DialPad';\r\n\r\nexport default class CalculatorApp extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <section id=\"main-frame\">\r\n                <div id=\"calculator-frame\">\r\n                    <Result />\r\n                    <DialPad />\r\n                </div>\r\n            </section>\r\n        )\r\n    }\r\n}","import {CalculatorActions} from '../utility/CalculatorActions';\r\nimport {convertMathTOJS} from '../utility/SymbolConvertion';\r\n\r\nexport interface CalculatorState {\r\n    typedKeys: Array<string | number>,\r\n    showResult: boolean,\r\n    result: number | string\r\n}\r\nconst intialState:CalculatorState = {\r\n    typedKeys  : [],\r\n    showResult : false,\r\n    result     : 0\r\n}\r\n\r\nexport default (state=intialState, action:{type:CalculatorActions,key?: string}):CalculatorState => {\r\n    switch (action.type) {\r\n        case CalculatorActions.KEY_INPUT:\r\n            if (!action.key) return state;\r\n            return {\r\n                ...state,\r\n                typedKeys  : state.showResult ? [action.key] : [...state.typedKeys, action.key],\r\n                result     : 0,\r\n                showResult : false\r\n            }\r\n        case CalculatorActions.RESET:\r\n            return {\r\n                ...state,\r\n                typedKeys  : [],\r\n                result     : 0,\r\n                showResult : false\r\n            }\r\n        case CalculatorActions.BACK:\r\n            return {\r\n                ...state,\r\n                typedKeys  : [...state.typedKeys.slice(0, state.typedKeys.length-1)],\r\n                result     : 0,\r\n                showResult : false\r\n            }\r\n        case CalculatorActions.EQUAL:\r\n            return {\r\n                ...state,\r\n                result     : convertMathTOJS(state.typedKeys.join('')),\r\n                showResult : true\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","// This file is intended to combine all the\r\n// reducer to single reducer. This can be done \r\n// in index.ts, but, when we use useState hook\r\n// to access state, we will get messages like following:\r\n// Property 'calculator' does not exist on type 'DefaultRootState'\r\nimport { combineReducers } from 'redux';\r\nimport CalculateReducer from './CalculateReducer';\r\n\r\nexport const RootReducer = combineReducers({\r\n    calculator: CalculateReducer\r\n});\r\nexport type RootState = ReturnType<typeof RootReducer>;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport './assets/sass/index.scss';\nimport CalculatorApp from './components/CalculatorApp/CalculatorApp';\nimport { RootReducer } from './reducers/RootReducer';\n\nconst store = createStore(RootReducer);\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n          <CalculatorApp />\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}